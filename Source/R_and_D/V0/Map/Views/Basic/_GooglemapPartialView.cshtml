
@using System.Drawing
@using Jmelosegui.Mvc.GoogleMap
@using TrackingMap.Service
@using TrackingMap.Service.ViewModel

@model TrackingMap.Models.MapModel
@*<div>
    <img src ="@(new Uri("/Content/img/cluster/cluster1.png", UriKind.Relative).ToString())"/>

</div>*@
@{
    
    Html.GoogleMap()                   
        .Name("map")
        .Zoom(11)
        .FitToMarkersBounds(true)
                        
        .Center(c => c.Latitude(35.6961111).Longitude(51.4230556))
        //.Layers(l => l.AddTrafficLayer())
        .EnableMarkersClustering(options =>
        {
            options.MaxZoom = 12;
            options.GridSize = 60;
            //options.AverageCenter = (bool)ViewData["AverageCenter"];
            options.ZoomOnClick = true;
            options.HideSingleGroupMarker = true;

            //options.CustomStyles(style => style.Add().ImageUrl(new Uri("/Content/img/cluster/cluster1.png", UriKind.Relative).ToString())
            //                        .Height(35).Width(35).FontSize(24).FontColor(Color.Black));
        //    //options.CustomStyles(style => style.Add().ImageUrl("~/Content/img/cluster/cluster1.png")
        //    //                        .Height(35).Width(35).FontSize(12).FontColor(Color.White));
        //    //options.CustomStyles(style => style.Add().ImageUrl("~/Content/img/cluster/cluster2.png")
        //    //                        .Height(45).Width(45).FontSize(12).FontColor(Color.White));
        //    //options.CustomStyles(style => style.Add().ImageUrl("~/Content/img/cluster/cluster3.png")
        //    //                        .Height(60).Width(60).FontSize(12).FontColor(Color.White));
        //    //options.CustomStyles(style => style.Add().ImageUrl("~/Content/img/cluster/cluster3.png")
        //    //                        .Height(60).Width(60).FontSize(12).FontColor(Color.White));
        //    //options.CustomStyles(style => style.Add().ImageUrl("~/Content/img/cluster/cluster3.png")
        //    //                        .Height(60).Width(60).FontSize(12).FontColor(Color.White));
            
        })
        
        .BindTo<PointView, Marker>
        (Model.Points, mappings => mappings.For<PointView>
            (
                binding => binding.ItemDataBound
                    (
                        (marker, regionInfo) =>
                        {
                            marker.Latitude = regionInfo.Latitude;
                            marker.Longitude = regionInfo.Longitude;
                            marker.Title = regionInfo.Desc;
                            marker.Icon = new MarkerImage( String.Format("~/Content/img/pin/pin{0}.png",(int) regionInfo.PointType
                                )
                                , new Size(40, 40)
                                , new Point(0, 0)
                                , new Point(0, 12));
                            marker.Window = new InfoWindow(marker)
                            {
                                Template =
                                {
                                    Content = () => ViewContext.Writer.Write(regionInfo.Desc)
                                }
                            };
                        }
                    )
            )
        )
        .Polygons(pf =>
        {
            foreach (var poly in Model.Polygons)
            {
                pf.Add()
                    .Points(ptn =>
                    {
                        foreach (var pt in poly.Points)
                        {
                            ptn.Add(pt.Latitude, pt.Longitude);
                        }
                    })

                    .StrokeColor(poly.Color)
                    .StrokeWeight(3);
            }

        })
        .Polylines(pf =>
        {
            foreach (var line in Model.Lines)
            {
                pf.Add()
                    .Points(ptn =>
                    {
                        foreach (var pt in line.Points)
                        {
                            ptn.Add(pt.Latitude, pt.Longitude);
                        }
                    })
                    .StrokeColor(line.Color)
                    .StrokeWeight(3);
            }
        })
      .Render();
        
        //.Markers(marker => marker.Add()
        //    .Longitude()
        //    .Latitude(35.6961111)
            
        //    .Window(w => w.Add()
        //        .Content((o) => String.Format("Hello PartialView {0}", Model))))
        //.Render();
}



@(Html.GoogleMap().ScriptRegistrar())
    