
@using System.Drawing
@using Jmelosegui.Mvc.GoogleMap

@model TrackingMap.Models.AreaModel


    @{
        Html.GoogleMap()
          .Name("map")
          .Zoom(11)
          .FitToMarkersBounds(true)
          .Center(c => c.Latitude(Model.Center.Latitude).Longitude(Model.Center.Longitude))

          .ClientEvents(events =>
          {
              events.OnMapLoaded("onMapLoadHandler");
              if (Model.EditMode)
                  events.OnMapClick("addPoint");
          }

           )


          .Polygons(pf => pf.Add()
              .Points(ptn =>
              {
                  foreach (var pt in Model.AreaPoints)
                  {
                      ptn.Add(pt.Latitude, pt.Longitude);
                  }
              })
              .FillColor(Model.Color)
              .StrokeColor(Color.Black)
              .StrokeWeight(4))



          .Polylines(pf =>
          {
              pf.Add()
                  .Points(ptn =>
                  {
                      foreach (var pt in Model.ParentPoints)
                      {
                          ptn.Add(pt.Latitude, pt.Longitude);
                      }
                  })
                  .StrokeColor(Color.DimGray)
                  .StrokeWeight(2);
              foreach (var child in Model.ChiledPoints)
              {
                  pf.Add()
                      .Points(ptn =>
                      {
                          foreach (var pt in child.Points)
                          {
                              ptn.Add(pt.Latitude, pt.Longitude);
                          }
                      })
                      .StrokeColor(child.Color)
                      .StrokeWeight(2);
              }
              foreach (var sibling in Model.SiblingPoints)
              {
                  pf.Add()
                      .Points(ptn =>
                      {
                          foreach (var pt in sibling.Points)
                          {
                              ptn.Add(pt.Latitude, pt.Longitude);
                          }
                      })
                      .StrokeColor(sibling.Color)
                      .StrokeWeight(2);
              }
              pf.Add()
                   .Points(ptn =>
                    {
                        foreach (var pt in Model.LinePoints)
                        {
                            ptn.Add(pt.Latitude, pt.Longitude);
                        }
                    })
                    .StrokeColor(Model.Color)
                    .StrokeWeight(2);
          })
            .Markers(marker =>
            {
                if (Model.EditMode)
                {
                    foreach (var pt in Model.AreaPoints)
                    {
                        marker.Add()
                            .Draggable(true).Clickable(true)
                            .Id("point_" + pt.Id)
                            .Longitude(pt.Longitude)
                            .Latitude(pt.Latitude)
                            .Title(pt.Lable)
                            .Window(window => window.Add()
                                .MaxWidth(300)
                                .DisableAutoPan(false)
                                .OpenOnRightClick(true)
                                .Content(
                                    @<text>
                                         <br/>
                                         <input type="number" id=@("txt_priority_" + pt.Id) value="@pt.Lable" class="form-control" />
                                         <br />
                                         <button id="btn_add_customer_" onclick="change_priority_point('@pt.Id')" class="btn btn-default">@CaptionResource.Save</button>
                                         <button id="btn_add_customer_" onclick="remove_point('@pt.Id')" class="btn btn-default">@CaptionResource.Remove</button>
                                     </text>

                                )
                            )
                            .Icon("~/Content/img/pin/point.png", new Size(10, 10), new Point(0, 0)
                                    , new Point(5, 5));

                    }
                    foreach (var pt in Model.LinePoints)
                    {
                        marker.Add()
                            .Draggable(true).Clickable(false)
                            .Id("point_" + pt.Id)
                            .Longitude(pt.Longitude)
                            .Latitude(pt.Latitude)
                            .Title(pt.Lable)
                                                        .Window(window => window.Add()
                                .MaxWidth(300)
                                .DisableAutoPan(false)
                                .OpenOnRightClick(true)
                                .Content(
                                @<text>
                                    <br />
                                    <input type="number" id=@("txt_priority_" + pt.Id) value="@pt.Lable" class="form-control" />
                                    <br />
                                    <button id="btn_add_customer_" onclick="change_priority_point('@pt.Id')" class="btn btn-default">@CaptionResource.Save</button>
                                    <button id="btn_add_customer_" onclick="remove_point('@pt.Id', true)" class="btn btn-default">@CaptionResource.Remove</button>
                                </text>

                                )
                            )
                            .Icon("~/Content/img/pin/point.png", new Size(10, 10), new Point(0, 0)
                                    , new Point(5, 5));
                    }

                }
                foreach (var pt in Model.CustomerPoints)
                {
                    marker.Add()
                        .Draggable(false).Clickable(true)
                        .Id("customer_point_" + pt.Id)
                        .Longitude(pt.Longitude)
                        .Latitude(pt.Latitude)
                        .Title(pt.Desc)
                        .Icon(String.Format("../Content/img/pin/customer{0}.png", (int)pt.PointType), new Size(16, 16), new Point(0, 0)
                            , new Point(8, 8))
                        .Window(window =>
                        {
                            var win = window.Add()
                                .MaxWidth(500)
                                .DisableAutoPan(false);


                            if ((Model.IsLeaf && Model.EditMode) && (pt.PointType == TrackingMap.Service.PointType.CustomerRout))
                            {
                                win.Content(
                                    @<text>
                                         <h1>@pt.Desc</h1>
                                         <div> توضیحات اضافه قراره اینجا بیاد</div>
                                         <br />                                            
                                         <button id="btn_remove_customer_" onclick="remove_from_selected('@pt.Id', true)" class="btn btn-default">@CaptionResource.RemoveCustomerRoute</button>
                                     </text>

                                    );

                            }
                            else
                                if ((Model.IsLeaf && Model.EditMode) && (pt.PointType == TrackingMap.Service.PointType.CustomerWithoutRout))
                                {
                                    win.Content(
                                        @<text>
                                            <h1>@pt.Desc</h1>
                                            <div> توضیحات اضافه قراره اینجا بیاد</div>
                                            <br />
                                            <button id="btn_add_customer_" onclick="add_to_selected('@pt.Id', true)" class="btn btn-default">@CaptionResource.AddCustomerRoute</button>
                                        </text>

                                    );

                                }
                                else
                                {
                                    win.Content(
                                    @<text>
                                        <h1>@pt.Desc</h1>
                                        <div> توضیحات اضافه قراره اینجا بیاد</div>
                                    </text>

                                        );

                            }
                        }
                        );

                }

            })
            
        .MarkerEvents(events =>
        {
            events.OnMarkerDragEnd("onDragEnd");
            if (Model.IsLeaf && Model.EditMode)
                events.OnMarkerClick("onClick");


        } )
        .Render();

}


        @(Html.GoogleMap().ScriptRegistrar())
